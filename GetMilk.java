/**   Demonstrates the behavior of a finally block.   @author Frank M. Carrano   @author Timothy M. Henry   @version 4.0*/public class GetMilk{   public static void main(String[] args)   {      try      {         openRefrigerator();         takeOutMilk();         pourMilk();         putBackMilk();      }      catch (NoMilkException e)      {         System.out.println(e.getMessage());      }      finally      {         closeRefrigerator();      }   } // end main      public static void openRefrigerator()   {      System.out.println("Open the refrigerator door.");   } // end openRefrigerator      public static void takeOutMilk() throws NoMilkException   {      if (Math.random() < 0.5)         System.out.println("Take out the milk.");      else         throw new NoMilkException("Out of Milk!");   } // end openRefrigerator      public static void pourMilk()   {      System.out.println("Pour the milk.");   } // end openRefrigerator      public static void putBackMilk()   {      System.out.println("Put the milk back.");   } // end openRefrigerator   public static void closeRefrigerator()   {      System.out.println("Close the refrigerator door.");   } // end openRefrigerator} // end GetMilk/*OUTPUT 1: Open the refrigerator door. Take out the milk. Pour the milk. Put the milk back. Close the refrigerator door. OUTPUT 2: Open the refrigerator door. Out of Milk! Close the refrigerator door.*/